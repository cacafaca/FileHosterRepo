@page "/Media/Add"
@using WebAppBlazor.ViewModel.User
@using WebAppBlazor.ViewModel.Media
@inject IUserViewModel UserViewModel
@inject IMediaViewModel MediaViewModel
@inject NavigationManager NavManager

@if (errorMessage != null)
{
    <h3>Error:</h3>
    @foreach (var error in @errorMessage.Split('\n'))
    {
        <h4>@error</h4>
    }
}


<h3>Add media links</h3>
@if (mediaHeader != null)
{
    <div id="header">
        <h4>Header</h4>
        <div class="container">
            <div class="row">
                <div class="col-sm-4">Name</div>
                <div class="col-sm-8"><input @bind="mediaHeader.Name" placeholder="e.g. movie name" /></div>
            </div>
            <div class="row">
                <div class="col-sm-4">Year</div>
                <div class="col-sm-8"><input @bind="mediaHeader.Year" placeholder="e.g. roll out year" /></div>
            </div>
            <div class="row">
                <div class="col-sm-4">Description</div>
                <div class="col-sm-8"><input @bind="mediaHeader.Description" placeholder="e.g. movie plot" /></div>
            </div>
            <div class="row">
                <div class="col-sm-4">Reference link</div>
                <div class="col-sm-8"><input @bind="mediaHeader.ReferenceLink" placeholder="e.g. IMDB.com link" /></div>
            </div>
        </div>
    </div>

    <div id="part">
        <h4>Part</h4>
        @if (mediaHeader.Parts != null)
        {
            foreach (var part in mediaHeader.Parts)
            {
                <div class="container">
                    <div class="row">
                        <div class="col-sm-4">Name</div>
                        <div class="col-sm-8"><input @bind="part.Name" placeholder="e.g. episode name" /></div>
                    </div>
                    <div class="row">
                        <div class="col-sm-4">Season</div>
                        <div class="col-sm-8"><input @bind="part.Season" placeholder="e.g. season number (1, 2, ...)" /></div>
                    </div>
                    <div class="row">
                        <div class="col-sm-4">Episode</div>
                        <div class="col-sm-8"><input @bind="part.Episode" placeholder="e.g. episode number (1, 2, ...)" /></div>
                    </div>
                    <div class="row">
                        <div class="col-sm-4">Description</div>
                        <div class="col-sm-8"><input @bind="part.Description" placeholder="e.g. episode plot" /></div>
                    </div>
                    <div class="container">
                        <h5>Links</h5>
                        @if (part.Version.Links != null)
                        {
                            @foreach (var link in part.Version.Links)
                            {
                                <div class="row">
                                    <div class="col-sm-4">Link </div>
                                    <div class="col-sm-8"><input @bind="link.Link" placeholder="e.g. links at uptobox.com or mega.nz" /></div>
                                </div>
                            }
                        }
                        <button @onclick="() => AddLink(part)">New link</button>
                    </div>
                </div>
            }
        }
        <button @onclick="@AddPart">New part</button>
    </div>

    <button @onclick="@AddMediaAsync">Add</button>
}

@code {
    private string errorMessage;
    private Common.Api.Request.MediaHeader mediaHeader = new Common.Api.Request.MediaHeader();

    private void AddPart()
    {
        if (mediaHeader.Parts != null)
        {
            mediaHeader.Parts.Add(new Common.Api.Request.MediaPart());
        }
    }

    private void AddLink(Common.Api.Request.MediaPart part)
    {
        if (part != null)
        {
            part.Version.Links.Add(new Common.Api.Request.MediaLink());
        }
    }

    private async Task AddMediaAsync()
    {
        try
        {
            var responseMedia = await MediaViewModel.AddAsync(mediaHeader);
            if (responseMedia != null && responseMedia.MediaHeaderId > 0)
            {
                MediaViewModel.WriteCacheMediaHeader(responseMedia);
                NavManager.NavigateTo("/Media/Get");
            }
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }
}
