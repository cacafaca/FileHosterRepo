@page "/User/Login"
@using WebAppBlazor.ViewModel.User
@inject IUserViewModel UserViewModel
@inject NavigationManager NavManager
@inject IMenuService MenuService

@if (isLoaded)
{
    <h1>Login</h1>
    <div class="container">
        <div class="row">
            <div class="col-sm-4">Email:</div>
            <div class="col-sm-8"><input @bind="user.Email" placeholder="enter email" /></div>
        </div>
        <div class="row">
            <div class="col-sm-4">Password:</div>
            <div class="col-sm-8"><input @bind="user.Password" type="password" /></div>
        </div>
        <div class="row">
            <button @onclick="@LoginUserAsync">Login</button>
        </div>
    </div>

    @if (errorMessage != null)
    {
        <p>Error: @errorMessage</p>
    }
}
else
{
    <p>Loading...</p>
}

@code {
    private bool isLoaded = false;
    private string errorMessage;
    private Common.Api.Request.User user = new Common.Api.Request.User();

    protected async override Task OnInitializedAsync()
    {
        isLoaded = false;
        try
        {
            if (!await UserViewModel.IsAdminRegistredAsync())
            {
                NavManager.NavigateTo("Admin/Register");
            }
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
        finally
        {
            isLoaded = true;
        }
    }

    private async void LoginUserAsync()
    {
        if (await UserViewModel.LoginAsync(user))
        {
            MenuService.NotifyChanged();
            if (await UserViewModel.IsUserAdminAsync())
            {
                NavManager.NavigateTo("Admin/Info");
            }
            else
            {
                NavManager.NavigateTo("User/Info");
            }
        }
        else
        {
            errorMessage = "Unsuccessful login.";
            await InvokeAsync(StateHasChanged);
        }
    }
}
