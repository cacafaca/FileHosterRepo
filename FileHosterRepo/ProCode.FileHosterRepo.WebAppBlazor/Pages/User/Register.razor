@page "/User/Register"
@using WebAppBlazor.ViewModel.User
@inject IUserViewModel UserViewModel
@inject NavigationManager NavManager
@inject IMenuService MenuService

@if (isLoaded)
{
    <h1>Register</h1>
    <div class="container">
        <div class="row">
            <div class="col-sm-4">Email:</div>
            <div class="col-sm-8"><input @bind="user.Email" placeholder="enter email" /></div>
        </div>
        <div class="row">
            <div class="col-sm-4">Password:</div>
            <div class="col-sm-8"><input @bind="user.Password" type="password" /></div>
        </div>
        <div class="row">
            <div class="col-sm-4">Confirm password:</div>
            <div class="col-sm-8"><input @bind="confirmPassword" type="password" /></div>
        </div>
        <div class="row">
            <div class="col-sm-4">Nickname:</div>
            <div class="col-sm-8"><input @bind="user.Nickname" placeholder="enter nickname" /></div>
        </div>
        <div class="row">
            <button @onclick="@RegisterUserAsync">Register</button>
        </div>
    </div>

    @if (errorMessage != null)
    {
        <div class="container">
            <p>Error: @errorMessage</p>
        </div>
    }
}
else
{
    <p>Loading...</p>
}

@code {
    private bool isLoaded = false;
    private string errorMessage;
    private Common.Api.Request.UserRegister user = new Common.Api.Request.UserRegister();
    private string confirmPassword;

    protected async override Task OnInitializedAsync()
    {
        isLoaded = false;
        try
        {
            if (!await UserViewModel.IsAdminRegistredAsync())       // If there is no Admin, that means site is just installed. Redirect to create admin.
            {
                NavManager.NavigateTo("Admin/Register");
            }
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
        finally
        {
            isLoaded = true;
        }
    }

    private async void RegisterUserAsync()
    {
        if (await UserViewModel.RegisterAsync(user, confirmPassword))
        {
            if (await UserViewModel.IsUserAdminAsync())
            {
                NavManager.NavigateTo("admin/info");
            }
            else
            {
                NavManager.NavigateTo("user/info");
            }
            MenuService.NotifyChanged();
        }
        else
        {
            throw new Exception("Unsuccessful login.");
        }
    }
}
