@page "/admin/register"
@inject HttpClient Http

<h1>Administrator - Register</h1>

<p>Welcome to the register page for Administrator. Only one administrator can be registered on this system.</p>

<p>Email:<input @bind="email" placeholder="enter email" /></p>
<p>Password:<input @bind="password" type="password" /></p>
<p>Nickname:<input @bind="nickname" placeholder="enter nickname" /></p>
<button @onclick="@RegisterAdmin">Register</button>

@if (errorMessage != null)
{
    <p>Error: @errorMessage</p>
    <p>@DateTime.Now</p>
}

<p>Trace stack:</p>
@if (traceStack != null)
{
    foreach (var trace in traceStack)
    {
        <p>@trace</p>
    }
}

@code {
    private string email;
    private string password;
    private string nickname;
    private string errorMessage;
    private List<string> traceStack = new();

    private async Task RegisterAdmin()
    {
        var admin = new Dto.Api.Request.UserRegister
        {
            Email = email,
            Password = password,
            Nickname = nickname
        };
        try
        {
            string data = @"{ ""Email"": ""admin"", ""Password"": ""admin"", ""Nickname"": ""admin"" }";
            traceStack.Add(data);
            traceStack.Add("Before Post.");
            //var response = await Http.PostAsJsonAsync("https://localhost:44300/Admin/Register", admin);
            var response = await Http.PostAsJsonAsync("https://localhost:44300/Admin/Register", data);
            traceStack.Add("After Post.");
            var responseMessage = await response.Content.ReadFromJsonAsync<string>();
            traceStack.Add("After Json.");
            if (response.StatusCode == System.Net.HttpStatusCode.OK)
            {
                string token = responseMessage;
            }
            else
            {
                errorMessage = responseMessage;
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Exception: {ex.GetType().Name}, Message: {ex.Message}";
        }
    }
}
